swagger: '2.0'
info:
  title: Process Registry API
  description: Register processes with the Process Registry API.
  version: "0.1"
# the domain of the service
host: localhost:8000
# array of all schemes that your API supports
schemes:
# TODO: Change to HTTPS when not on localhost!
  - http
# will be prefixed to all paths
basePath: /prapp
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
  basic:
    type: basic
paths:
  /processdef/:
    get:
      summary: Get the list of all the process definitions registered.
      description: |
        Get the list of all the process definitions registered. No authentification is required.
      tags:
        - Process definitions
      responses:
        200:
          description: An array of process definitions
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessDef'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a new process definition.
      description: |
        Add a new process definition. Authentification is required.
      security:
        - basic: []
        - api_key: []
      
      parameters:
        - name: data
          in: body
          description: Process definition
          required: true
          schema:
            $ref: '#/definitions/ProcessDefPost'
      tags:
        - Process definitions
      responses:
        201:
          description: The newly created process definition
          schema:
            $ref: '#/definitions/ProcessDef'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /processdef/{id}/:
    get:
      summary: Get a single process definition.
      description: |
        Get a single process definition. Authentification is required.
      parameters:
        - name: id
          in: path
          description: Id of the process description
          required: true
          type: integer
          minimum: 0
      tags:
        - Process definitions
      responses:
        200:
          description: The process definitions matching the given Id
          schema:
            $ref: '#/definitions/ProcessDef'
        404:
          description: No process definition with the given Id
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Redefine an already existing process definition.
      description: |
        Redefine an already existing process definition. Authentification is required.
      security:
        - basic: []
        - api_key: []
      
      parameters:
        - name: id
          in: path
          description: Id of the process description
          required: true
          type: integer
          minimum: 0
        - name: data
          in: body
          description: Process definition
          required: true
          schema:
            $ref: '#/definitions/ProcessDefPost'
      tags:
        - Process definitions
      responses:
        200:
          description: The updated process definition
          schema:
            $ref: '#/definitions/ProcessDef'
        404:
          description: No process definition with the given Id
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Modify an already existing process definition.
      description: |
        Modify an already existing process definition. Authentification is required.
      security:
        - basic: []
        - api_key: []
      
      parameters:
        - name: id
          in: path
          description: Id of the process description
          required: true
          type: integer
          minimum: 0
        - name: data
          in: body
          description: Process definition
          required: true
          schema:
            $ref: '#/definitions/ProcessDefPatch'
      tags:
        - Process definitions
      responses:
        200:
          description: The updated process definition
          schema:
            $ref: '#/definitions/ProcessDef'
        404:
          description: No process definition with the given Id
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete an already existing process definition.
      description: |
        Delete an already existing process definition. Authentification is required.
      parameters:
        - name: id
          in: path
          description: Id of the process description
          required: true
          type: integer
          minimum: 0
      security:
        - basic: []
        - api_key: []
      tags:
        - Process definitions
      responses:
        204:
          description: Process definition correctly deleted
        404:
          description: No process definition with the given Id
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/:
    get:
      summary: Get the list of all the users.
      description: |
        Get the list of all the users. No authentification is required.
      tags:
        - Users
      responses:
        200:
          description: An array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}/:
    get:
      summary: Get a single user.
      description: |
        Get a single user. No authentification is required.
      parameters:
        - name: id
          in: path
          description: Id of the user
          required: true
          type: integer
          minimum: 0
      tags:
        - Users
      responses:
        200:
          description: The user matching the given Id
          schema:
            $ref: '#/definitions/User'
        404:
          description: No user with the given Id
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api-token-auth/:
    post:
      summary: Get the authentification token for a user.
      description: |
        Get the authentification token for a user by providing his username and password. No authentification is required; however the credentials of the user are part of the request.
      parameters:
        - name: data
          in: body
          description: User credentials
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      tags:
        - Users
      responses:
        200:
          description: The authentification token of the user
          schema:
            $ref: '#/definitions/TokenResp'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  # TESTFILE FOR DEMO ONLY
  /testfile/:
    post:
      summary: Test with a file.
      description: |
        Test with a file. Authentification is required.
      security:
        - basic: []
        - api_key: []

      # It is important that the endpoint consumes either "multipart/form-data" (which is what curl sends with -F)
      # or "application/x-www-form-urlencoded" for the "file" type to be accepted
      consumes:
        - multipart/form-data

      parameters:
        - name: f
          type: file
          in: formData
          required: true
          description: File to send
      tags:
        - Test file
      responses:
        200:
          description: File accepted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  ProcessDef:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific process
      name:
        type: string
        description: Name given to the process
      user:
        type: integer
        description: Unique ID of the user who created the process
      definition:
        type: string
        description: JSON-formatted string containing all the information required to start the process.
  User:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific user
      username:
        type: string
        description: Name given to the user.
      process_definitions:
        type: array
        description: Array of IDs of all the process descriptions created by the user
        items:
          type: integer
      definition:
        type: string
        description: JSON-formatted string containing all the information required to start the process
  Error:
    type: object
    properties:
      detail:
        type: string
  TokenResp:
    type: object
    properties:
      token:
        type: string
  Credentials:
    type: object
    required:
      - username
      - password
    properties:
      username:
        description: Username of the user
        type: string
      password:
        description: Password of the user
        type: string
  ProcessDefPost:
    type: object
    required:
      - name
      - definition
    properties:
      name:
        description: Name given to the process
        type: string
      definition:
        description: JSON-formatted string containing all the information required to start the process
        type: string
  ProcessDefPatch:
    type: object
    properties:
      name:
        description: Name given to the process
        type: string
      definition:
        description: JSON-formatted string containing all the information required to start the process
        type: string